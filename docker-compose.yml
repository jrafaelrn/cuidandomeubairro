version: '3.7'
services:

  # Serviço de Banco de Dados
  database:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER} 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - cmb-network
    ports:
      - 5432:5432
    volumes:
      - ./data/db-data:/var/lib/postgresql/data
    restart: always


  # https://hasura.io/docs/latest/getting-started/docker-simple/
  # Serviço GraphQL
  graphql:
    image: hasura/graphql-engine
    ports:
    - 8000:8080
    networks:
      - cmb-network
    depends_on:
      database:
        condition: service_completed_successfully
        restart: true
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  nominatim:
    container_name: nominatim
    image: mediagis/nominatim:4.2
    restart: always
    ports:
      - "8088:8080"
    networks:
      - cmb-network
    environment:
      # see https://github.com/mediagis/nominatim-docker/tree/master/4.2#configuration for more options
      PBF_URL: https://download.geofabrik.de/south-america/brazil/sudeste-latest.osm.pbf
      REPLICATION_URL: https://download.geofabrik.de/south-america/brazil/sudeste-updates/
      NOMINATIM_PASSWORD: password
    volumes:
      - ./data/nominatim-data:/var/lib/postgresql/14/main
    shm_size: 1gb
    depends_on:
      - database

  
  # Aplicação principal
  backend:
    build: 
      context: ./src/backend
      dockerfile: Dockerfile
    networks:
      - cmb-network
    ports:
      - 3000:3000
      - 5678:5678
    depends_on:
      - graphql 
      - database
      - nominatim
    environment:
      - POSTGRES_USER=${POSTGRES_USER} 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - TELEGRAM_API_KEY=${TELEGRAM_API_KEY}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    #volumes:
      #- ./src/backend:/app
    stdin_open: true # docker run -i
    tty: true        # docker run -t


  frontend:
    build:
      context: ./src
      dockerfile: Dockerfile-front
    ports:
      - 8080:8080
      - 5000:5000 #To flaks API
      - 53350:53350 #To web-debug
    volumes:
      - ./src/frontend:/app
    networks:
      - cmb-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend 
    

networks:
  cmb-network: